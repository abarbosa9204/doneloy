  // Mixins
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

@mixin font-face($style-name, $file, $family, $category:"") {
  $filepath: "../fonts/" + $family + "/" + $file;
  @font-face {
    font-family: "#{$style-name}";
    src: url($filepath + ".eot");
    src: url($filepath + ".eot?#iefix") format('embedded-opentype'), url($filepath + ".woff") format('woff'), url($filepath + ".ttf")  format('truetype'), url($filepath + ".svg#" + $style-name + "") format('svg');
  }
  %#{$style-name} {
    font: {
      @if $category != "" {
        family: "#{$style-name}", #{$category};
      }
      @else {
        family: "#{$style-name}";
        weight: normal;
      }
    }
  }
}

@mixin font-face-new($style-name, $file, $category:"") {
  $filepath: "../fonts/" + $file;
  @font-face {
    font-family: "#{$style-name}";
    src: url($filepath + '.woff2') format('woff2'),
    url($filepath + '.woff') format('woff');
  }
  %#{$style-name} {
    font: {
      @if $category != "" {
        family: "#{$style-name}", #{$category};
      }
      @else {
        family: "#{$style-name}";
        weight: normal;
      }
    }
  }
}

@mixin breakpoint($point) {
  @if $point == desktop {
    @media (min-width: 37.5em ) { @content ; }
  }
  @else if $point == laptop {
    @media (max-width: 70em) and (min-width: 37.5em) { @content ; }
  }
  @else if $point == tablet {
    @media (max-width: 64em) and (min-width: 37.5em) { @content ; }
  }
  @else if $point == phablet {
    @media (max-width: 50em) and (min-width: 37.5em)  { @content ; }
  }
  @else if $point == mobileonly {
    @media (max-width: 37.5em)  { @content ; }
  }
}

@mixin breakpoint2($point) {
  @if $point == desktop {
    @media (min-width: 70em) { @content ; }
  }
  @else if $point == laptop {
    @media (min-width: 64em) { @content ; }
  }
  @else if $point == tablet {
    @media (min-width: 50em) { @content ; }
  }
  @else if $point == phablet {
    @media (min-width: 37.5em)  { @content ; }
  }

  @else if $point == mobileonly {
    @media (max-width: 37.5em)  { @content ; }
  }
}

@mixin opacities($opacity, $op_n){

  background-color: $opacity;

  background-color: rgba($opacity, $op_n);

}

@mixin gradientW($color_rgb){
  background: -moz-linear-gradient(right,  rgba($color_rgb,0) 0%,rgba($color_rgb,0.80) 14%, rgba($color_rgb,0.85) 16%, rgba($color_rgb,0.90) 18%, rgba($color_rgb,0.95) 20%, rgba($color_rgb, 1) 22%, rgba($color_rgb,1) 100%); /* FF3.6-15 */
  background: -webkit-linear-gradient(right,  rgba($color_rgb,0) 0%,rgba($color_rgb,0.80) 14%,rgba($color_rgb,0.85) 16%,rgba($color_rgb,0.90) 18%,rgba($color_rgb,0.95) 20%, rgba($color_rgb,1) 22%,rgba($color_rgb,1) 100%); /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(to left,  rgba($color_rgb,0) 0%,rgba($color_rgb,0.80) 14%,rgba($color_rgb,0.85) 16%,rgba($color_rgb,0.90) 18%,rgba($color_rgb,0.95) 20%, rgba($color_rgb,1) 22%,rgba($color_rgb,1) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

@mixin gradientH($color_rgb){
  background: -moz-linear-gradient(top,  rgba($color_rgb,0) 80%, rgba($color_rgb,0.5) 86%, rgba($color_rgb,0.75) 88%, rgba($color_rgb,1) 90%, rgba($color_rgb,1) 100%); /* FF3.6-15 */
  background: -webkit-linear-gradient(top,  rgba($color_rgb,0) 80%,rgba($color_rgb,0.5) 86%,rgba($color_rgb,0.75) 88%,rgba($color_rgb,1) 90%,rgba($color_rgb,1) 100%); /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(to bottom,  rgba($color_rgb,0) 80%,rgba($color_rgb,0.5) 86%,rgba($color_rgb,0.75) 88%,rgba($color_rgb,1) 90%,rgba($color_rgb,1) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}
